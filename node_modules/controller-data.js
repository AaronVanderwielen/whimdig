var ControllerData = function (businessLogic, csvParser) {
    var bl = businessLogic,
		csv = csvParser,
		logJson = function (json) {
		    console.log(JSON.stringify(json, null, 2));
		},
		jsonResponse = function (success, body, status) {
		    return {
		        success: success,
		        body: body,
		        statusCode: success ? 200 : status
		    };
		};

    return [
		// main
		{
		    name: "main",
		    route: "",
		    actions: {
		        get: {
		            index: {
		                method: function (req, res) {
		                    res.render("index");
		                }
		            }
		        },
		        post: {}
		    }
		},
		// event
		{
		    name: "event",
		    route: "/event",
		    actions: {
		        get: {
		            index: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.getEvent(req.query.eventId, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            upcoming: {
		            	authenticate: true,
		            	method: function (req, res) {
		            		bl.getUpcomingEvents(req.query.tags, req.query.span, req.query.radius, req.query.loc, req.session.user.facebook_id, function (response) {
		            			res.json(response);
		            		});
		            	}
		            },
		            list: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.getEvents(req.query.ids, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            bounds: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.getEventsForBounds(req.query.span, req.query.filters, req.query.bounds, req.session.user.facebook_id, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            userEvents: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.getUserEvents(req.session.user.facebook_id, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            userOwnedEvents: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.getUserOwnedEvents(req.session.user._id, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            userPastEvents: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.getUserPastEvents(req.session.user.facebook_id, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            tags: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.getAllTags(function (response) {
		                        res.json(response);
		                    });
		                }
		            }
		        },
		        post: {
		            create: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.createEvent(req.body, req.session.user, function (response) {
		                        res.json(new jsonResponse(response.success, response.body));
		                    });
		                }
		            },
		            update: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.updateEvent(req.body, req.session.user, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            remove: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.deleteEvent(req.body.eventId, req.session.user._id, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            addUser: {
		                authenticate: true,
		                method: function (req, res) {
		                    if (req.body.eventId) {
		                        bl.addUserToEvent(req.session.user.facebook_id, req.body.eventId, function (response) {
		                            res.json(response);
		                        });
		                    }
		                }
		            },
		            removeUser: {
		                authenticate: true,
		                method: function (req, res) {
		                    if (req.body.eventId) {
		                        bl.removeUserFromEvent(req.session.user._id, req.session.user.facebook_id, req.body.eventId, function (response) {
		                            res.json(response);
		                        });
		                    }
		                }
		            },
		            review: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.createReview(req.session.user, req.body.eventId, req.body.rating, req.body.message, function (response) {
		                        res.json(response);
		                    });
		                }
		            }
		        }
		    }
		},
		// account
		{
		    name: "account",
		    route: "/account",
		    actions: {
		        get: {
		            index: {
		                method: function (req, res) {
		                    res.send("account controller");
		                }
		            },
		            user: {
		                method: function (req, res) {
		                    res.send(req.session.user);
		                }
		            },
		            logout: {
		                method: function (req, res) {
		                    req.session.destroy(function () {
		                        res.redirect('/');
		                    });
		                }
		            }
		        },
		        post: {
		            authenticate: {
		                method: function (req, res) {
		                    bl.authenticate(req.body.token, req.body.id, function (response) {
		                        if (response.success) {
		                            console.log("got user: " + response.body._id);
		                            req.session.user = response.body;
		                            res.json(response);
		                        }
		                        else {
		                            res.json(new jsonResponse(false, "Could not login"));
		                        }
		                    });
		                }
		            }
		        }
		    }
		},
		// map
		{
		    name: "map",
		    route: "/map",
		    actions: {
		        get: {
		            index: {
		                method: function (req, res) {
		                    res.status(404).send("404 Not Found");
		                }
		            },
		            places: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.placesApiSearch(req.query.lat, req.query.lng, req.query.radius, function (response) {
		                        res.json(response);
		                    });
		                }
		            }
		        },
		        post: {}
		    }
		},
		//places
		{
		    name: "places",
		    route: "/places",
		    actions: {
		        get: {
		            index: {
		                method: function (req, res) {
		                    var placeId = req.query.placeId;
		                    bl.getPlaceById(placeId, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            upcomingEvents: {
		                method: function (req, res) {
		                    var placeId = req.query.placeId;
		                    bl.getPlaceUpcomingEvents(placeId, req.session.user.facebook_id, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            pastEvents: {
		                method: function (req, res) {
		                    var placeId = req.query.placeId;
		                    bl.getPlacePastEvents(placeId, req.session.user.facebook_id, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            names: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.placesSearchName(req.query.name, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            user: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.getUserPlaces(req.session.user._id, function (response) {
		                        res.json(response);
		                    });
		                }
		            }
		        },
		        post: {
		            searchAll: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.placesSearchAll(req.body.lat, req.body.lng, req.body.name, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		            user: {
		                authenticate: true,
		                method: function (req, res) {
		                    bl.addPlaceToUser(req.session.user._id, req.body.placeId, function (response) {
		                        res.json(response);
		                    });
		                }
		            },
		        }
		    }
		},
		// views
		{
		    name: "template",
		    route: "/template",
		    actions: {
		        get: {
		            index: {
		                method: function (req, res) {
		                    var model = req.query.model;
		                    if (model) {
		                        model = JSON.parse(model);
		                    }
		                    res.render(req.query.template, { model: model });
		                }
		            }
		        }
		    }
		},
		// admin
		{
		    name: "admin",
		    route: "/admin",
		    authenticate: function (user) {
		        return user.facebook_id === '10204770365593869' && user.admin === true;
		    },
		    actions: {
		        get: {
		            index: {
		                method: function (req, res) {
		                    res.render('admin');
		                }
		            },
		            events: {
		                method: function (req, res) {
		                    bl.getEventsAdmin(function (model) {
		                        res.render('admin-events', { model: model });
		                    });
		                }
		            },
		            places: {
		                method: function (req, res) {
		                    bl.getPlacesAdmin(function (model) {
		                        res.render('admin-places', { model: model });
		                    });
		                }
		            },
		            tags: {
		                method: function (req, res) {
		                    bl.getTagsAdmin(function (model) {
		                        res.render('admin-tags', { model: model });
		                    });
		                }
		            },
		            users: {
		                method: function (req, res) {
		                    bl.getUsersAdmin(function (model) {
		                        res.render('admin-users', { model: model });
		                    });
		                }
		            }
		        },
		        post: {
		            createDefaultTags: {
		                method: function (req, res) {
		                    bl.createDefaultTags(function () {
		                        res.redirect('/admin');
		                    });
		                }
		            },
		            importEvents: {
		                method: function (req, res) {
		                    req.busboy.on('file', function (fieldname, file, filename, encoding, mimetype) {
		                        var eventCsv = [];
		                        console.log("Uploading: " + filename);
		                        file.pipe(csv())
								.on('data', function (data) {
								    eventCsv.push(data);
								})
								.on('end', function () {
								    bl.importEventsCsv(eventCsv, req.session.user, function () {
								        res.redirect('/admin');
								    });
								});
		                    });
		                    req.pipe(req.busboy);
		                }
		            },
		            importPlaces: {
		                method: function (req, res) {
		                    bl.importPlaces(req.body.address, req.body.keyword, function (response) {
		                        res.redirect('/admin');
		                    });
		                }
		            }
		        }

		    }
		}
    ];
};

module.exports = ControllerData;